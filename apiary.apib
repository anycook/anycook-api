FORMAT: 1A
HOST: http://api.anycook.de

# anycook
anycook is the online cookbook.

# Group Autocomplete
Ressources that autocomplete query strings.

## General [/autocomplete?query={query}&excludedCategory={excludedCategory}&excludedIngredients={excludedIngredients}&excludedTags={excludedTags}&excludedUsers={excludedUsers}&maxResults={maxResults}]
Autocompletes a query for all types

### Autocomplete query [GET] 

+ Parameters
    + query (string, `t`) ... String that should be completed
    + excludedCategory (optional, string, `Fleisch`) ... Excludes a category from autocomplete results
    + excludedIngredients (optional, string, `Kaffee,Saft`) ... Excludes one or more ingredients from autocomplete results (comma seperated)
    + excludedTags (optional, string, `matschepampe,weihnachten`) ... Excludes on or more tags from autocomplete (comma seperated)
    + excludedUsers (optional, string, `1,2`) ... List of user ids to exclude (only numbers, comma seperated)
    + maxResults = `10` (optional, number, `100`) ... Maximum number of the returned results 

+ Response 200 (application/json)

        { 
            "recipes":["Johannisbeer-Blechkuchen"],
            "ingredients":["Joghurt"],
            "categories":[],
            "tags":["japanisch","joghurt"],
            "user":[
                {"id":24,"name":"jaminka"},
                {"id":83,"name":"jasmin"},
                {"id":60,"name":"Johänni"}]
            
        }

## Ingredient [/autocomplete/ingredient?query={query}&exclude={exclude}&maxResults={maxResults}]
Autocompletes only ingredient names

### Autocomplete query [GET]

+ Parameters
   + query (string, `l`) ... String that should be completed
   + exclude (optional, string, `Kaffee,Saft`) ... Excludes one or more ingredients from autocomplete results (comma seperated)
   + maxResults = `10` (optional, number, `100`) ... Maximum number of the returned results

+ Response 200 (application/json)
        
        [
            {"name":"Lasagneplatten"},
            {"name":"Lauch"},
            {"name":"Lauchzwiebel"},
            {"name":"Lauchzwiebeln"},
            {"name":"lauwarmes Wasser"},
            {"name":"Linsen"},
            {"name":"Loffelbiscuits"}
        ]

## Tag [/autocomplete/tag?query={query}&exclude={exclude}&maxResults={maxResults}]
Autocompletes only tag names

### Autocomplete query [GET]

+ Parameters
   + query (string, `m`) ... String that should be completed
   + exclude (optional, string, `mexikanisch,weihnachten`) ... Excludes one or more tags from autocomplete results (comma seperated)
   + maxResults = `10` (optional, number, `100`) ... Maximum number of the returned results

+ Response 200 (application/json)
        
        [
            {"name":"matschepampe"},
            {"name":"mediteran"},
            {"name":"mexikanisch"},
            {"name":"minze"}
        ]

## User [/autocomplete/user?query={query}&exclude={exclude}&maxResults={maxResults}]
Autocompletes only user names

### Autocomplete query [GET]

+ Parameters
   + query (string, `j`) ... String that should be completed
   + exclude (optional, string, `1,2`) ... List of user ids to exclude (only numbers, comma seperated)
   + maxResults = `10` (optional, number, `100`) ... Maximum number of the returned results

+ Response 200 (application/json)
        
            [
                {"id":24,"name":"jaminka"},
                {"id":83,"name":"jasmin"},
                {"id":60,"name":"Johänni"}
            ]


# Group Category
Ressources that represent the recipe categories

## Categories [/category?sorted={sorted}]
Returns all category names with number of recipes. Sorted by name or in the anycook prefered order.

### Get all categories [GET]

+ Parameters
    + sorted (boolean, optional, `true`)
        If set to true categories get sorted in the anycook prefered order.

+ Response 200 (application/json)

        [ 
            {
               "name" : "Backwaren",
               "recipeNumber" : 6,
               "sortId" : 13
            }, {
               "name" : "Desserts",
               "recipeNumber" : 46,
               "sortId" : 14
            }, {
               "name" : "Eierspeisen",
               "recipeNumber" : 3,
               "sortId" : 10
            }, {
               "name" : "Fisch",
               "recipeNumber" : 3,
               "sortId" : 6
            }
        ]


## Category [/category/{name}]
Returns a category with a list of its recipes.

### Get category [GET]

+ Parameters
    + name (string, required, `Fleisch`) ... Name of a category.
    
+ Response 200 (application/json)

        {
            "name":"Fleisch",
            "recipes":["Yakitori","Hühnerfrikassee","Wiener Schnitzel mit Pommes","Sandwich mit Minutensteak","Hühnerbrust mit Erdnusssoße","Kebab im Teigmantel","gefüllte Hackbuletten","Schweinekotelett mit Sauerkraut","Hack-Gemüsetaschen","Putenpfanne mit Spinat und Kichererbsen","Hamburger","Gebratene Ente","Schinken-Käse-Brötchen","Gefüllte Paprika mit Hackfleisch","Pute mit Parmesan und Schinken","Hähnchenbrust mit Mandelkruste","Cordon bleu"],
            "recipeNumber":17
        }
        

# Group Discover
Ressources that return list of recipes by different kind of recommendation types

## New [/discover/new?recipeNumber={recipeNumber}]
Returns the newest recipes

### Get new [GET]

+ Parameters
    + recipeNumber = `30` (number, optional) ... Maximum number of returned recipes
    
+ Response 200 (application/json)
    
        ["Schokoladen-Beeren-Gugelhupf","Nasi Goreng Ikan","Russischer Zupfkuchen","Apfel-Zwiebel-Balsamico Gemüse","Apfel-Tiramisu","Steckrüben-Lauchsuppe mit Feta","Kartoffel-Kürbis Suppe","Blätterteigsnäk","feine Plätzchen","Nougat-Karos","Cranberry-Zimt-Schnecken","Florentiner Plätzchen","gefüllte Kringel","Windbeuteltorte","selbstgemachte Nudeln","Oliven-Pesto","Omas gedeckter Apfelkuchen","Pute mit Parmesan und Schinken","Paprika-Garnelen mit Nudeln und Avocado","Pizzateig","Kebab im Teigmantel","Tomaten-Feta-Taschen","Spinat-Walnuss-Pesto","Bananenbrot","Schoko-Walnuss-Muffins","Süddeutscher Zwiebelkuchen","Kräuter-Kartoffelbrei","Sonnen-Brot","Schokibakuchen","Käse-Kirschkuchen"]

## Recommended [/discover/recommended?recipeNumber={recipeNumber}]
If logged-in it returns the recipes that are similar to the recipes you like. Otherwise it returns the most viewed recipes.

### Get recommended [GET]

+ Parameters
    + recipeNumber = `30` (number, optional) ... Maximum number of returned recipes
    
+ Response 200 (application/json)

        ["Gratinierte Putenfilets mit Äpfeln","Zitronenrisotto","Dal","Spinat-Quiche","Gemüsewähe","Kartoffelsuppe","Kartoffelpuffer","Schinken-Käse-Gnocchi","Quiche mit Lauch und Speck","Brotauflauf","Zucchini-Champignon-Lasagne","Sandwich mit Minutensteak","Käse-Lauch-Suppe","Wiener Schnitzel mit Pommes","Nudelauflauf","Lasagne","Kürbiskuchen","Yakitori","Johannisbeer-Blechkuchen","Spinattaschen","Panna Cotta","Canelloni mit Gemüsefüllung","Mousakas","Tortellini mit Pilz-Sahnesoße","Nudeln in Brokkoli-Schinken-Sauce","Beeren-Schmand-Kuchen","Marmorkuchen","Provence-Risotto","Hühnerbrust mit Erdnusssoße","Gefüllter Kürbis"]
        

## Tasty [/discover/tasty?recipeNumber={recipeNumber}]
Returns the recipes that the users like most.

### Get tasty [GET]

+ Parameters
    + recipeNumber = `30` (number, optional) ... Maximum number of returned recipes
    
+ Response 200 (application/json)

        ["Zucchini-Champignon-Lasagne","Gratinierte Putenfilets mit Äpfeln","Pizzateig","Zitronenkuchen","Kartoffelsuppe","Dal","Spinat-Quiche","Zitronenrisotto","Yakitori","Wiener Schnitzel mit Pommes","Hühnerfrikassee","Beeren-Muffins","Gemüsewähe","Schokibakuchen","Macadamia-Cookies","Käse-Lauch-Suppe","Panna Cotta","Marmorkuchen","Brotauflauf","Gemüsebratlinge","Kartoffelpuffer","Italienischer Nudelsalat","Schinken-Käse-Gnocchi","Russischer Rotebeetesalat","Tiramisu ohne Ei","Haferbrei","Beeren-Schmand-Kuchen","Fusilli mit Ricotta","Grießbrei mit Himbeeren","Kürbiskuchen"]
        



