apply plugin: "war"
apply plugin: "idea"

//current project version
version = '0.1.0'
sourceCompatibility = 1.7
// base package
group = 'de.anycook.api'

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories{
    mavenCentral()

}

dependencies {

    compile 'log4j:log4j:1.2.17',
            'commons-dbcp:commons-dbcp:1.4',
            'commons-codec:commons-codec:1.8',
            'commons-io:commons-io:2.4',
            'commons-fileupload:commons-fileupload:1.3',
            'com.amazonaws:aws-java-sdk:1.7.1',
            'com.google.code.geocoder-java:geocoder-java:0.16',
            'com.google.guava:guava:15.0',
            'com.google.template:soy:2012-12-21',
            'it.unimi.dsi:fastutil:6.5.9',
            'javax.mail:mail:1.4.7',
            'javax.ws.rs:javax.ws.rs-api:2.0',
            'org.apache.commons:commons-math3:3.2',
            'org.apache.commons:commons-lang3:3.1',
            'org.apache.lucene:lucene-snowball:3.0.3',
            'org.apache.lucene:lucene-analyzers-common:4.5.0',
            'org.apache.lucene:lucene-queryparser:4.5.0',
            //'org.eclipse.persistence:eclipselink:2.5.1',
            'org.glassfish.jersey.media:jersey-media-moxy:2.6',
            'org.glassfish.jersey.media:jersey-media-multipart:2.6',
            'org.glassfish.jersey.containers:jersey-container-servlet:2.6',
            'org.glassfish.jersey.core:jersey-server:2.6',
            /*'org.glassfish.jersey.core:jersey-common:2.6',
            'org.glassfish.jersey.ext:jersey-entity-filtering:2.6',*/
            //'org.glassfish:javax.ejb:3.1.1',
            'org.mongodb:mongo-java-driver:2.11.3',
            'org.scribe:scribe:1.3.5'

    providedCompile 'javax.servlet:javax.servlet-api:3.1.0'
    runtime 'mysql:mysql-connector-java:5.1.26'

    testCompile 'junit:junit:4.11',
            'org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:2.6'
}

task packageJavadoc(type: Jar, dependsOn: 'javadoc') {
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task packageSources(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

// includes javadoc and sources as artifacts.
artifacts {
    archives packageJavadoc
    archives packageSources
}